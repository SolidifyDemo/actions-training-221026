name: Main build and deploy workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      reason: 
        description: "Why are you running this workflow manually?"
        required: true      

jobs:
  
  evaluate-run:
    name: "Decides which parts of the workflow to run"
    runs-on: ubuntu-latest
    outputs:
      run-tests: ${{ steps.step1.outputs.run-tests }}
    steps:
    - id: step1
      run: echo "run-tests=false" >> $GITHUB_OUTPUT

  build:
    env:
      GITHUB_CONTEXT: ${{ toJSON(github) }}
    runs-on: ubuntu-latest

    steps:
    - name: dump context
      run: echo "$GITHUB_CONTEXT"
    - uses: actions/checkout@latest
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Package
      run: dotnet publish -c Release -o webapp
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: webapp
        path: webapp/**
    - name: Report succcess
      if: success()
      run: echo "### Job succeess :rocket:" >> $GITHUB_STEP_SUMMARY
    - name: Report failure
      if: failure()
      run: echo "### Job failed :x:" >> $GITHUB_STEP_SUMMARY

  deploy_dev:
    name: "Deploy to development environment"
    runs-on: ubuntu-latest
    needs: build
    environment: 
      name: "Dev"
      url: ${{ steps.deploywebapp.outputs.webapp-url }}
    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.0.8
      with:
        name: webapp
        path: webapp

    - name: Login via Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIAL }}

    - name: Deploy web app
      id: deploywebapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: "actions-demo-api"
        package: webapp

    - name: az cli logout
      run: az logout    
      
  deploy_test:
    name: "Deploy to test environment"
    runs-on: ubuntu-latest
    needs: deploy_dev
    environment: 
      name: "Test"
    steps:
    - run: echo "test"

  run_tests:
    name: "Run autotests"
    runs-on: ubuntu-latest
    needs: [deploy_dev, evaluate-run]
    if: needs.evaluate-run.outputs.run-tests == 'true'
    environment: 
      name: "Test"
    steps:
    - run: echo "test"
    
  deploy_prod:
    name: "Deploy to prod environment"
    runs-on: ubuntu-latest
    needs: [deploy_test, run_tests]
    environment: 
      name: "Prod"
    steps:
    - run: echo "test"    
